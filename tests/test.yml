---
- hosts: tests
  become: yes
  gather_facts: no
  remote_user: vagrant
  vars:
    - ansible_python_interpreter: /usr/bin/python3
  pre_tasks:
    - name: Install Dev Packages
      apt:
        name: "{{ item }}"
      loop:
        - python3-psycopg2
        - python3-dev
        - build-essential
  roles:
    # Setup production 
    - role: hamlet
      vars:
        hamlet: {
          project: {
            dir: "/srv/sites/hamlet_demoapp/production",
            name: "hamlet_test",
            env: "production.env"
          },
          git: {
            repo: "https://github.com/jaketreacher/hamlet_demoapp.git",
            branch: production
          },
          db: {
            name: hamlet-prod,
            user: hamlet,
            pass: password
          },
          daemon_name: hamlet_test.prod,
          server_name: hamlet-test
        }
    # Setup staging
    - role: hamlet
      vars:
        hamlet: {
          project: {
            dir: "/srv/sites/hamlet_demoapp/staging",
            name: "hamlet_test",
            env: "staging.env"
          },
          git: {
            repo: "https://github.com/jaketreacher/hamlet_demoapp.git",
            branch: staging
          },
          daemon_name: hamlet_test.stag,
          server_name: staging.hamlet-test
        }

- hosts: localhost
  connection: local
  tasks:
    - name: Test Production
      include_tasks: verify_up.yml
      vars:
        - test_url: 'hamlet-test'
        - branch_text: 'Branch: production'
        - engine_text: 'DB Engine: postgresql'
        - name_text: 'DB Name: hamlet-prod'
      ignore_errors: yes

    - name: Test Staging
      include_tasks: verify_up.yml
      vars:
        - test_url: 'staging.hamlet-test'
        - branch_text: 'Branch: staging'
        - engine_text: 'DB Engine: sqlite3'
        - name_text: 'DB Name: None'
      ignore_errors: yes
