---
- name: fetch git repo
  git:
    repo: "{{ hamlet.git.repo }}"
    dest: "{{ hamlet.project.dir }}"
    version: "{{ hamlet.git.branch }}"
    force: yes
  register: fetch_git_repo

- name: copy env file
  copy:
    src: "{{ hamlet.project.env }}"
    dest: "{{ hamlet.project.dir }}/.env"
  when: "'env' in hamlet.project.keys()"
  notify: reload daemon

- name: install requirements
  pip:
    requirements: "{{ hamlet.project.dir }}/requirements.txt"
    virtualenv: "{{ hamlet.project.dir }}/venv"
  when: fetch_git_repo.changed or force_project

- name: ensure gunicorn installed
  pip:
    name: gunicorn
    virtualenv: "{{ hamlet.project.dir }}/venv"
  when: fetch_git_repo.changed or force_project

- name: django collectstatic and migrate
  django_manage:
    command: "{{ item }}"
    app_path: "{{ hamlet.project.dir }}"
    virtualenv: "{{ hamlet.project.dir }}/venv"
  loop:
    - collectstatic -i sass --noinput
    - migrate
  when: fetch_git_repo.changed or force_project

- name: update directory permissions
  file:
    path: "{{ hamlet.project.dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
  when: fetch_git_repo.changed or force_project

- name: create systemd config from template
  template:
    src: systemd.service.j2
    dest: /etc/systemd/system/{{ hamlet.daemon_name }}.service
  notify: reload daemon

- name: check gunicorn systemd service running
  service:
    name: "{{ hamlet.daemon_name }}"
    enabled: yes
    state: started
